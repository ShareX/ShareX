<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cbOverrideAfterCaptureSettings.Text" xml:space="preserve">
    <value>「キャプチャー後」の設定を変更する</value>
  </data>
  <data name="cbOverrideAfterUploadSettings.Text" xml:space="preserve">
    <value>「アップロード後」の設定を変更する</value>
  </data>
  <data name="cbOverrideDestinationSettings.Text" xml:space="preserve">
    <value>「アップロード先」の設定を変更する</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>説明:</value>
  </data>
  <data name="btnAfterCapture.Text" xml:space="preserve">
    <value>キャプチャー後...</value>
  </data>
  <data name="btnAfterUpload.Text" xml:space="preserve">
    <value>アップロード後...</value>
  </data>
  <data name="btnDestinations.Text" xml:space="preserve">
    <value>アップロード先...</value>
  </data>
  <data name="btnTask.Text" xml:space="preserve">
    <value>タスク...</value>
  </data>
  <data name="tpTask.Text" xml:space="preserve">
    <value>タスク</value>
  </data>
  <data name="tpGeneral.Text" xml:space="preserve">
    <value>全般</value>
  </data>
  <data name="tpImage.Text" xml:space="preserve">
    <value>画像</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>キャプチャー</value>
  </data>
  <data name="tpUpload.Text" xml:space="preserve">
    <value>アップロード</value>
  </data>
  <data name="tpActions.Text" xml:space="preserve">
    <value>アクション</value>
  </data>
  <data name="tpWatchFolders.Text" xml:space="preserve">
    <value>フォルダーの監視</value>
  </data>
  <data name="tpTools.Text" xml:space="preserve">
    <value>ツール</value>
  </data>
  <data name="tpAdvanced.Text" xml:space="preserve">
    <value>高度な設定</value>
  </data>
  <data name="tsmiImageUploaders.Text" xml:space="preserve">
    <value>画像アップローダー</value>
  </data>
  <data name="tsmiTextUploaders.Text" xml:space="preserve">
    <value>テキスト アップローダー</value>
  </data>
  <data name="tsmiFileUploaders.Text" xml:space="preserve">
    <value>ファイル アップローダー</value>
  </data>
  <data name="tsmiURLShorteners.Text" xml:space="preserve">
    <value>URL短縮サービス</value>
  </data>
  <data name="tsmiURLSharingServices.Text" xml:space="preserve">
    <value>URL共有サービス</value>
  </data>
  <data name="cbPlaySoundAfterUpload.Text" xml:space="preserve">
    <value>タスク完了後に音を鳴らす</value>
  </data>
  <data name="cbPlaySoundAfterCapture.Text" xml:space="preserve">
    <value>キャプチャー後に音を鳴らす</value>
  </data>
  <data name="lblImagePNGBitDepth.Text" xml:space="preserve">
    <value>PNG のビット深度:</value>
  </data>
  <data name="cbImageAutoUseJPEG.Text" xml:space="preserve">
    <value>次のファイルサイズより大きい時はJPEG画像形式を使用する:</value>
  </data>
  <data name="lblImageFormat.Text" xml:space="preserve">
    <value>画像形式:</value>
  </data>
  <data name="lblImageFileExist.Text" xml:space="preserve">
    <value>ファイルが存在する場合:</value>
  </data>
  <data name="lblImageSizeLimitHint.Text" xml:space="preserve">
    <value>KB</value>
  </data>
  <data name="lblImageGIFQuality.Text" xml:space="preserve">
    <value>GIF 画質:</value>
  </data>
  <data name="lblImageJPEGQuality.Text" xml:space="preserve">
    <value>JPEG 画質:</value>
  </data>
  <data name="tpEffects.Text" xml:space="preserve">
    <value>効果</value>
  </data>
  <data name="lblImageEffectsNote.Text" xml:space="preserve">
    <value>「キャプチャー後のタスク→ 画像エフェクトの追加」から画像エフェクトの有効/無効の切り替えができます。</value>
  </data>
  <data name="cbImageEffectOnlyRegionCapture.Text" xml:space="preserve">
    <value>領域キャプチャーにのみ画像エフェクトを適用する</value>
  </data>
  <data name="btnImageEffects.Text" xml:space="preserve">
    <value>画像エフェクトの設定...</value>
  </data>
  <data name="tpThumbnail.Text" xml:space="preserve">
    <value>サムネイル</value>
  </data>
  <data name="cbThumbnailIfSmaller.Text" xml:space="preserve">
    <value>サムネイルより大きな画像のみサムネイルを作成</value>
  </data>
  <data name="lblThumbnailNamePreview.Text" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="lblThumbnailName.Text" xml:space="preserve">
    <value>サムネイル名:</value>
  </data>
  <data name="lblThumbnailHeight.Text" xml:space="preserve">
    <value>高さ:</value>
  </data>
  <data name="lblThumbnailWidth.Text" xml:space="preserve">
    <value>幅:</value>
  </data>
  <data name="btnCaptureCustomRegionSelectRectangle.Text" xml:space="preserve">
    <value>領域の選択...</value>
  </data>
  <data name="lblCaptureCustomRegion.Text" xml:space="preserve">
    <value>構成済み領域:</value>
  </data>
  <data name="lblCaptureCustomRegionWidth.Text" xml:space="preserve">
    <value>幅</value>
  </data>
  <data name="lblCaptureCustomRegionHeight.Text" xml:space="preserve">
    <value>高さ</value>
  </data>
  <data name="cbShowCursor.Text" xml:space="preserve">
    <value>スクリーンショットにマウスカーソルを含める</value>
  </data>
  <data name="lblCaptureShadowOffset.Text" xml:space="preserve">
    <value>影のオフセット:</value>
  </data>
  <data name="cbCaptureTransparent.Text" xml:space="preserve">
    <value>ウィンドウ キャプチャーで透明度情報を含める</value>
  </data>
  <data name="cbCaptureAutoHideTaskbar.Text" xml:space="preserve">
    <value>ウィンドウ キャプチャーでタスクバーに重なったときはタスクバーを隠す</value>
  </data>
  <data name="cbCaptureShadow.Text" xml:space="preserve">
    <value>ウィンドウ キャプチャーでウィンドウの影を含める (透明度情報を含めるを有効にする必要あり)</value>
  </data>
  <data name="lblScreenshotDelayInfo.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="cbCaptureClientArea.Text" xml:space="preserve">
    <value>ウィンドウ キャプチャーの時は、クライアント領域のみをキャプチャーする</value>
  </data>
  <data name="tpRegionCapture.Text" xml:space="preserve">
    <value>領域キャプチャー</value>
  </data>
  <data name="cbRegionCaptureShowFPS.Text" xml:space="preserve">
    <value>左上にFPSを表示する</value>
  </data>
  <data name="lblRegionCaptureFixedSizeWidth.Text" xml:space="preserve">
    <value>幅:</value>
  </data>
  <data name="lblRegionCaptureFixedSizeHeight.Text" xml:space="preserve">
    <value>高さ:</value>
  </data>
  <data name="cbRegionCaptureIsFixedSize.Text" xml:space="preserve">
    <value>固定サイズ領域キャプチャー モード:</value>
  </data>
  <data name="cbRegionCaptureShowCrosshair.Text" xml:space="preserve">
    <value>十字線カーソルを表示する</value>
  </data>
  <data name="lblRegionCaptureMagnifierPixelSize.Text" xml:space="preserve">
    <value>ルーペのピクセルの大きさ:</value>
  </data>
  <data name="lblRegionCaptureMagnifierPixelCount.Text" xml:space="preserve">
    <value>ルーペの表示ピクセル数:</value>
  </data>
  <data name="cbRegionCaptureUseSquareMagnifier.Text" xml:space="preserve">
    <value>ルーペの形状は丸でなく四角にする</value>
  </data>
  <data name="cbRegionCaptureShowMagnifier.Text" xml:space="preserve">
    <value>カーソル付近にルーペを表示する</value>
  </data>
  <data name="cbRegionCaptureShowInfo.Text" xml:space="preserve">
    <value>位置と大きさの情報を表示する</value>
  </data>
  <data name="lblRegionCaptureSnapSizes.Text" xml:space="preserve">
    <value>Alt キー押下で表示する、スナップ可能な領域サイズ:</value>
  </data>
  <data name="cbRegionCaptureUseCustomInfoText.Text" xml:space="preserve">
    <value>カーソル付近に独自の情報テキストを表示する:</value>
  </data>
  <data name="cbRegionCaptureDetectControls.Text" xml:space="preserve">
    <value>ウィンドウ内のコントロール領域も検出する</value>
  </data>
  <data name="cbRegionCaptureDetectWindows.Text" xml:space="preserve">
    <value>ウィンドウ領域を検出し、マウスオーバーでキャプチャー可能にする</value>
  </data>
  <data name="lblRegionCaptureMouse5ClickAction.Text" xml:space="preserve">
    <value>第5ボタン クリック時の動作:</value>
  </data>
  <data name="lblRegionCaptureMouse4ClickAction.Text" xml:space="preserve">
    <value>第4ボタン クリック時の動作:</value>
  </data>
  <data name="lblRegionCaptureMouseMiddleClickAction.Text" xml:space="preserve">
    <value>中ボタン クリック時の動作:</value>
  </data>
  <data name="lblRegionCaptureMouseRightClickAction.Text" xml:space="preserve">
    <value>右ボタン クリック時の動作:</value>
  </data>
  <data name="cbRegionCaptureMultiRegionMode.Text" xml:space="preserve">
    <value>領域のリサイズ、移動が可能な複数領域選択モードを使用する</value>
  </data>
  <data name="btnRegionCaptureSnapSizesDialogCancel.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="btnRegionCaptureSnapSizesDialogAdd.Text" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="RegionCaptureSnapSizesHeight.Text" xml:space="preserve">
    <value>高さ:</value>
  </data>
  <data name="lblRegionCaptureSnapSizesWidth.Text" xml:space="preserve">
    <value>幅:</value>
  </data>
  <data name="cbRegionCaptureUseDimming.Text" xml:space="preserve">
    <value>背景を暗くして、選択範囲を区別しやすくする (起動速度に影響します)</value>
  </data>
  <data name="tpScreenRecorder.Text" xml:space="preserve">
    <value>動画キャプチャー</value>
  </data>
  <data name="cbScreenRecorderShowCursor.Text" xml:space="preserve">
    <value>録画にマウスカーソルを含める</value>
  </data>
  <data name="btnScreenRecorderFFmpegOptions.Text" xml:space="preserve">
    <value>録画オプション...</value>
  </data>
  <data name="lblScreenRecorderStartDelay.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="lblScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="lblScreenRecordFPS.Text" xml:space="preserve">
    <value>録画 FPS:</value>
  </data>
  <data name="cbScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>録画時間を固定:</value>
  </data>
  <data name="tpFileNaming.Text" xml:space="preserve">
    <value>ファイル名の命名</value>
  </data>
  <data name="cbNameFormatCustomTimeZone.Text" xml:space="preserve">
    <value>タイム ゾーンを指定:</value>
  </data>
  <data name="lblNameFormatPatternPreview.Text" xml:space="preserve">
    <value>プレビュー:</value>
  </data>
  <data name="lblNameFormatPatternActiveWindow.Text" xml:space="preserve">
    <value>ウィンドウ キャプチャーの名前の規則:</value>
  </data>
  <data name="lblNameFormatPatternPreviewActiveWindow.Text" xml:space="preserve">
    <value>プレビュー:</value>
  </data>
  <data name="cbFileUploadUseNamePattern.Text" xml:space="preserve">
    <value>ファイルのアップロードで実際の名前の代わりにアップロード名前規則を使用する</value>
  </data>
  <data name="lblNameFormatPattern.Text" xml:space="preserve">
    <value>キャプチャー/クリップボード アップロード名の規則:</value>
  </data>
  <data name="tpUploadClipboard.Text" xml:space="preserve">
    <value>クリップボード アップロード</value>
  </data>
  <data name="cbClipboardUploadShareURL.Text" xml:space="preserve">
    <value>クリップボードにURLがあれば、自動でURL共有サービスで共有する</value>
  </data>
  <data name="cbClipboardUploadShortenURL.Text" xml:space="preserve">
    <value>クリップボードにURLがあれば、自動で短縮URLを作成する</value>
  </data>
  <data name="tpUploaderFilters.Text" xml:space="preserve">
    <value>アップローダー フィルター</value>
  </data>
  <data name="chUploaderFiltersName.Text" xml:space="preserve">
    <value>アップローダー</value>
  </data>
  <data name="chUploaderFiltersExtension.Text" xml:space="preserve">
    <value>拡張子</value>
  </data>
  <data name="btnUploaderFiltersRemove.Text" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="btnUploaderFiltersUpdate.Text" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="btnUploaderFiltersAdd.Text" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="lblUploaderFiltersDestination.Text" xml:space="preserve">
    <value>アップローダー:</value>
  </data>
  <data name="lblUploaderFiltersExtensionsExample.Text" xml:space="preserve">
    <value>例: png, jpg, jpeg</value>
  </data>
  <data name="lblUploaderFiltersExtensions.Text" xml:space="preserve">
    <value>拡張子フィルター:</value>
  </data>
  <data name="btnActionsDuplicate.Text" xml:space="preserve">
    <value>複製</value>
  </data>
  <data name="btnActionsAdd.Text" xml:space="preserve">
    <value>追加...</value>
  </data>
  <data name="chActionsName.Text" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="chActionsPath.Text" xml:space="preserve">
    <value>パス</value>
  </data>
  <data name="chActionsArgs.Text" xml:space="preserve">
    <value>引数</value>
  </data>
  <data name="chActionsExtensions.Text" xml:space="preserve">
    <value>拡張子</value>
  </data>
  <data name="btnActionsEdit.Text" xml:space="preserve">
    <value>編集...</value>
  </data>
  <data name="btnActionsRemove.Text" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="btnWatchFolderEdit.Text" xml:space="preserve">
    <value>編集...</value>
  </data>
  <data name="cbWatchFolderEnabled.Text" xml:space="preserve">
    <value>フォルダーを監視し、新しいファイルを自動でアップロードする</value>
  </data>
  <data name="chWatchFolderFolderPath.Text" xml:space="preserve">
    <value>フォルダーのパス</value>
  </data>
  <data name="chWatchFolderFilter.Text" xml:space="preserve">
    <value>フィルター</value>
  </data>
  <data name="chWatchFolderIncludeSubdirectories.Text" xml:space="preserve">
    <value>サブ ディレクトリを含む</value>
  </data>
  <data name="btnWatchFolderRemove.Text" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="btnWatchFolderAdd.Text" xml:space="preserve">
    <value>追加...</value>
  </data>
  <data name="lblToolsScreenColorPickerFormat.Text" xml:space="preserve">
    <value>スクリーン カラーピッカーのコピー書式:</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - タスクの設定</value>
  </data>
  <data name="lblOCRDefaultLanguage.Text" xml:space="preserve">
    <value>規定の言語:</value>
  </data>
  <data name="lblScreenshotDelay.Text" xml:space="preserve">
    <value>スクリーンショットを遅らせて起動:</value>
  </data>
  <data name="cbFileUploadReplaceProblematicCharacters.Text" xml:space="preserve">
    <value>URLに使えない文字をアンダースコアに置き換える</value>
  </data>
  <data name="cbClipboardUploadURLContents.Text" xml:space="preserve">
    <value>クリップボードにファイルのURLがあるときは、ファイルを取得してアップロードする</value>
  </data>
  <data name="btnScreenshotsFolderBrowse.Text" xml:space="preserve">
    <value>参照...</value>
  </data>
  <data name="cbCaptureOCRAutoCopy.Text" xml:space="preserve">
    <value>OCRの結果をクリップボードにコピーする</value>
  </data>
  <data name="cbCaptureOCRSilent.Text" xml:space="preserve">
    <value>OCR実行時にダイアログを開かない（サイレント実行）</value>
  </data>
  <data name="cbClipboardUploadAutoIndexFolder.Text" xml:space="preserve">
    <value>クリップボードにフォルダパスがあるときは、そのフォルダのindexを作ってアップロードする</value>
  </data>
  <data name="lblActionsNote.Text" xml:space="preserve">
    <value>「キャプチャー後のタスク→アクションの実行」で有効/無効の切り替えができます。</value>
  </data>
  <data name="btnAutoIncrementNumber.Text" xml:space="preserve">
    <value>変更を適用</value>
  </data>
  <data name="cbOverrideScreenshotsFolder.Text" xml:space="preserve">
    <value>「スクリーンショットのフォルダ」を上書きする</value>
  </data>
  <data name="cbURLRegexReplace.Text" xml:space="preserve">
    <value>正規表現を使ってURLを置換する</value>
  </data>
  <data name="lblAutoIncrementNumber.Text" xml:space="preserve">
    <value>ファイル名で使う連番:</value>
  </data>
  <data name="lblURLRegexReplacePattern.Text" xml:space="preserve">
    <value>正規表現パターン:</value>
  </data>
  <data name="lblURLRegexReplaceReplacement.Text" xml:space="preserve">
    <value>置換パターン:</value>
  </data>
  <data name="lblToolsScreenColorPickerFormatCtrl.Text" xml:space="preserve">
    <value>スクリーン カラーピッカーのコピー書式(Ctrl＋クリック):</value>
  </data>
  <data name="lblToolsScreenColorPickerInfoText.Text" xml:space="preserve">
    <value>マウスを乗せたときの色表示の形式:</value>
  </data>
  <data name="cbDisableNotifications.Text" xml:space="preserve">
    <value>通知を無効にする</value>
  </data>
  <data name="cbDisableNotificationsOnFullscreen.Text" xml:space="preserve">
    <value>全画面では通知を無効にする</value>
  </data>
  <data name="cbShowToastNotificationAfterTaskCompleted.Text" xml:space="preserve">
    <value>タスク完了後に通知を表示する</value>
  </data>
  <data name="gbToastWindow.Text" xml:space="preserve">
    <value>トースター通知</value>
  </data>
  <data name="cbUseCustomCaptureSound.Text" xml:space="preserve">
    <value>キャプチャー時の音を指定:</value>
  </data>
  <data name="cbUseCustomErrorSound.Text" xml:space="preserve">
    <value>エラー発生時の音を指定:</value>
  </data>
  <data name="cbUseCustomTaskCompletedSound.Text" xml:space="preserve">
    <value>タスク完了時の音を指定:</value>
  </data>
  <data name="lblToastWindowDuration.Text" xml:space="preserve">
    <value>表示時間:</value>
  </data>
  <data name="lblToastWindowDurationSeconds.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="lblToastWindowFadeDuration.Text" xml:space="preserve">
    <value>フェードアウトの時間:</value>
  </data>
  <data name="lblToastWindowFadeDurationSeconds.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="lblToastWindowLeftClickAction.Text" xml:space="preserve">
    <value>左クリック時の動作:</value>
  </data>
  <data name="lblToastWindowMiddleClickAction.Text" xml:space="preserve">
    <value>中クリック時の動作:</value>
  </data>
  <data name="lblToastWindowRightClickAction.Text" xml:space="preserve">
    <value>右クリック時の動作:</value>
  </data>
  <data name="lblToastWindowSize.Text" xml:space="preserve">
    <value>大きさ:</value>
  </data>
  <data name="lblToastWindowPlacement.Text" xml:space="preserve">
    <value>表示位置:</value>
  </data>
  <data name="tpNotifications.Text" xml:space="preserve">
    <value>通知</value>
  </data>
  <data name="cbOverrideActions.Text" xml:space="preserve">
    <value>「アクション」の設定を変更する</value>
  </data>
  <data name="cbOverrideAdvancedSettings.Text" xml:space="preserve">
    <value>「高度な設定」の設定を変更する</value>
  </data>
  <data name="cbOverrideCaptureSettings.Text" xml:space="preserve">
    <value>「キャプチャー」の設定を変更する</value>
  </data>
  <data name="cbOverrideGeneralSettings.Text" xml:space="preserve">
    <value>「全般」の設定を上書きする</value>
  </data>
  <data name="cbOverrideImageSettings.Text" xml:space="preserve">
    <value>「画像」の設定を上書きする</value>
  </data>
  <data name="cbOverrideCustomUploader.Text" xml:space="preserve">
    <value>「デフォルトのアップローダー」を変更する</value>
  </data>
  <data name="cbOverrideFTPAccount.Text" xml:space="preserve">
    <value>「デフォルトのFTPアカウント」を変更する</value>
  </data>
  <data name="cbOverrideToolsSettings.Text" xml:space="preserve">
    <value>「ツール」の設定を変更する</value>
  </data>
  <data name="cbOverrideUploadSettings.Text" xml:space="preserve">
    <value>「アップロード」の設定を変更する</value>
  </data>
  <data name="cbShowImageEffectsWindowAfterCapture.Text" xml:space="preserve">
    <value>キャプチャー後に画像エフェクトのウィンドウを表示する</value>
  </data>
  <data name="cbScreenRecordAutoStart.Text" xml:space="preserve">
    <value>録画開始を遅らせる:</value>
  </data>
  <data name="cbScreenRecordConfirmAbort.Text" xml:space="preserve">
    <value>録画を中断するときに確認する</value>
  </data>
  <data name="cbScreenRecordTransparentRegion.Text" xml:space="preserve">
    <value>透明な領域選択を使う</value>
  </data>
  <data name="cbImageAutoJPEGQuality.Text" xml:space="preserve">
    <value>指定のファイルサイズになるように画質を自動で調整する</value>
  </data>
  <data name="btnActions.Text" xml:space="preserve">
    <value>説明を開く...</value>
  </data>
  <data name="cbScreenRecordTwoPassEncoding.Text" xml:space="preserve">
    <value>無劣化のエンコードで録画後、ユーザーのエンコードオプションを適用</value>
  </data>
  <data name="cbToastWindowAutoHide.Text" xml:space="preserve">
    <value>キャプチャー時に自動で非表示</value>
  </data>
  <data name="lblRegionCaptureFPSLimit.Text" xml:space="preserve">
    <value>FPS 上限:</value>
  </data>
  <data name="lblTask.Text" xml:space="preserve">
    <value>タスク:</value>
  </data>
  <data name="cbUseCustomActionCompletedSound.Text" xml:space="preserve">
    <value>操作完了時の音を指定:</value>
  </data>
  <data name="cbPlaySoundAfterAction.Text" xml:space="preserve">
    <value>操作完了時に音を鳴らす</value>
  </data>
  <data name="cbUseRandomImageEffect.Text" xml:space="preserve">
    <value>画像エフェクトをランダムに適用</value>
  </data>
  <data name="lblCaptureCustomWindow.Text" xml:space="preserve">
    <value>事前に指定したウィンドウの題名:</value>
  </data>
  <data name="lblRegionCaptureBackgroundDimStrength.Text" xml:space="preserve">
    <value>背景を暗くする強度:</value>
  </data>
  <data name="cbRegionCaptureActiveMonitorMode.Text" xml:space="preserve">
    <value>領域キャプチャとカーソルをアクティブなモニターに制限</value>
  </data>
  <data name="cbCloseWindowAfterOpenServiceLink.Text" xml:space="preserve">
    <value>サービスのリンクを開いた後、OCRのウィンドウを閉じる</value>
  </data>
</root>