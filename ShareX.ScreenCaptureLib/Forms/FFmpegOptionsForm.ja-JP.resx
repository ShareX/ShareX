<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="nudx264CRF.ToolTip" xml:space="preserve">
    <value>CRF (Constant Rate Factor): 範囲は0-51、0 はロスレス、30 が既定、51 は最低画質。
値が大きいほど画質は悪くなるが、ファイルサイズは小さくなる。</value>
  </data>
  <data name="nudXvidQscale.ToolTip" xml:space="preserve">
    <value>1 が最高画質/最大容量、31 が最低画質/最少容量</value>
  </data>
  <data name="cbx264Preset.ToolTip" xml:space="preserve">
    <value>速い設定 = エンコードは高速だが、ファイルサイズが大きい
遅い設定 = エンコードは低速だが、ファイルサイズが小さい
リアルタイム エンコード (スクリーン録画など)では、可能な限り高速な設定がよい。</value>
  </data>
  <data name="tbVorbis_qscale.ToolTip" xml:space="preserve">
    <value>0–10の範囲、10 が最高品質、3–6 が良好な範囲、既定は 3。</value>
  </data>
  <data name="tbMP3_qscale.ToolTip" xml:space="preserve">
    <value>0-9の範囲、数値が小さいほど高品質、0-3 では結果は明白、4 (既定) では明白な違いが知覚でき、6 は 「許容できる」品質です。</value>
  </data>
  <data name="tbAACBitrate.ToolTip" xml:space="preserve">
    <value>既定は 128k</value>
  </data>
  <data name="cbGIFStatsMode.ToolTip" xml:space="preserve">
    <value>既定は full</value>
  </data>
  <data name="cbGIFDither.ToolTip" xml:space="preserve">
    <value>既定は sierra2_4a</value>
  </data>
  <data name="pbAudioCodecWarning.ToolTip" xml:space="preserve">
    <value>この音声コーデックは、選択中の動画コンテナには対応していません。</value>
  </data>
  <data name="pbx264PresetWarning.ToolTip" xml:space="preserve">
    <value>スクリーン録画のようなリアルタイム エンコードでは可能な限り高速な設定を推奨。
そうでないと、録画が中断されたり、フレーム落ちが発生します。</value>
  </data>
  <data name="lblCodec.Text" xml:space="preserve">
    <value>動画コーデック:</value>
  </data>
  <data name="lblx264Preset.Text" xml:space="preserve">
    <value>プリセット:</value>
  </data>
  <data name="lblXvidQscale.Text" xml:space="preserve">
    <value>可変ビットレート:</value>
  </data>
  <data name="cbCustomCommands.Text" xml:space="preserve">
    <value>独自のコマンドラインを使用</value>
  </data>
  <data name="lblVP8Bitrate.Text" xml:space="preserve">
    <value>ビットレート:</value>
  </data>
  <data name="lblNVENCPreset.Text" xml:space="preserve">
    <value>プリセット:</value>
  </data>
  <data name="lblNVENCBitrate.Text" xml:space="preserve">
    <value>ビットレート:</value>
  </data>
  <data name="lblGIFDither.Text" xml:space="preserve">
    <value>ディザリング方式:</value>
  </data>
  <data name="lblGIFStatsMode.Text" xml:space="preserve">
    <value>パレット方式:</value>
  </data>
  <data name="btnTest.Text" xml:space="preserve">
    <value>コマンドのテスト</value>
  </data>
  <data name="btnCopyPreview.Text" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="lblAACQuality.Text" xml:space="preserve">
    <value>ビットレート:</value>
  </data>
  <data name="lblVorbisQuality.Text" xml:space="preserve">
    <value>音質:</value>
  </data>
  <data name="lblMP3Quality.Text" xml:space="preserve">
    <value>音質:</value>
  </data>
  <data name="lblVideoSource.Text" xml:space="preserve">
    <value>映像入力:</value>
  </data>
  <data name="lblAudioSource.Text" xml:space="preserve">
    <value>オーディオ入力:</value>
  </data>
  <data name="lblAudioCodec.Text" xml:space="preserve">
    <value>音声コーデック:</value>
  </data>
  <data name="lblHelperDevices.Text" xml:space="preserve">
    <value>映像/オーディオ入力の screen-capture-recorder と virtual-audio-capturer をインストール</value>
  </data>
  <data name="btnInstallHelperDevices.Text" xml:space="preserve">
    <value>録画デバイスをインストール...</value>
  </data>
  <data name="btnRefreshSources.Text" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="lblCommandLineArgs.Text" xml:space="preserve">
    <value>追加したいコマンドライン引数:</value>
  </data>
  <data name="lblCommandLinePreview.Text" xml:space="preserve">
    <value>コマンドラインのプレビュー:</value>
  </data>
  <data name="cbUseCustomFFmpegPath.Text" xml:space="preserve">
    <value>独自の FFmpeg のパスを使用:</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - 動画キャプチャー オプション</value>
  </data>
  <data name="tbOpusBitrate.ToolTip" xml:space="preserve">
    <value>既定は 128k</value>
  </data>
  <data name="lblAMFQuality.Text" xml:space="preserve">
    <value>品質:</value>
  </data>
  <data name="lblOpusQuality.Text" xml:space="preserve">
    <value>ビットレート:</value>
  </data>
  <data name="lblQSVBitrate.Text" xml:space="preserve">
    <value>ビットレート:</value>
  </data>
  <data name="lblQSVPreset.Text" xml:space="preserve">
    <value>プリセット:</value>
  </data>
  <data name="lblAMFUsage.Text" xml:space="preserve">
    <value>使い方:</value>
  </data>
  <data name="cbx264UseBitrate.Text" xml:space="preserve">
    <value>ビットレートを使用</value>
  </data>
  <data name="nudGIFBayerScale.ToolTip" xml:space="preserve">
    <value>Bayer Scale を管理。高くするとバンディング（縞）を増やすでしょう。標準は 2 です。</value>
  </data>
  <data name="lblVideoEncoder.Text" xml:space="preserve">
    <value>動画エンコーダー:</value>
  </data>
  <data name="lblAudioEncoder.Text" xml:space="preserve">
    <value>音声エンコーダー:</value>
  </data>
  <data name="lblAACBitrate.Text" xml:space="preserve">
    <value>ビットレート:</value>
  </data>
  <data name="lblOpusBitrate.Text" xml:space="preserve">
    <value>ビットレート:</value>
  </data>
  <data name="lblNVENCTune.Text" xml:space="preserve">
    <value>調整:</value>
  </data>
  <data name="lblAMFBitrate.Text" xml:space="preserve">
    <value>ビットレート:</value>
  </data>
  <data name="btnResetOptions.Text" xml:space="preserve">
    <value>オプションを初期化...</value>
  </data>
</root>